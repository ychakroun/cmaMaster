<?php

namespace CmaUserBundle\Repository;

/**
 * PieceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PieceRepository extends \Doctrine\ORM\EntityRepository
{
	public function findWithUrl($page,$topfilter,$urlParameter)
	{
		if($topfilter==2||$topfilter==1){
			if($topfilter==2){
				$orderBy = 'a.price';
				$order = 'DESC';
			}else{
				$orderBy = 'a.price';
				$order = 'ASC';
			}
		}else{
			$orderBy = 'a.date';
			$order = 'ASC';
		}
		$offset = ($page-1)*6;
		$qb = $this->createQueryBuilder('a')
			->select('a')
            ->andWhere('a.etat = :etat')
            ->orWhere('a.etat IS NULL')
            ->setParameter(':etat', 5)
            ->addOrderBy($orderBy, $order)
            ->setFirstResult( $offset )
           	->setMaxResults( 6 )
        ;
        $price=array();
        $medium=array();
        $width=array();
        if(!empty($urlParameter)){
        	foreach ($urlParameter as $key => $value) {
        		if($key!='_token'){
        			foreach ($value as $key2 => $setPara) {
        				switch ($key) {
        					case 'medium':
        							$medium[$key2] = $setPara;
        						break;
        					case 'price':
        							$price[$key2] = $setPara;
        						break;
        					case 'width':
        							$width[$key2] = $setPara;
        						break;
        					
        					default:
        						
        						break;
        				}
        			}
        		}
        	}
        }
        if(!empty($price)||!empty($medium)||!empty($width)){
        	if(!empty($price)){
        		for ($i=0; $i < sizeof($price); $i++) {
                    if($i>0){
        			     if($price[$i]>=100){ 
        			     	$qb->orWhere('a.price >= :price'.$i);
        			     	$qb->setParameter(':price'.$i, $price[$i]+0);
        			     }else{
        			     	$qb->orWhere('a.price < :price'.$i);
        			     	$qb->setParameter(':price'.$i, $price[$i]+0);
        			     }
                    }else{
                        if($price[$i]>=100){
                            $qb->andWhere("a.price >= :price".$i);
                            $qb->setParameter(':price'.$i, $price[$i]);
                        }else{
                            $qb->andWhere("a.price < :price".$i);
                            $qb->setParameter(':price'.$i, $price[$i]);
                        }

                    }
        			if($price[$i]>=100&&$price[$i]<500){
        				$qb->andWhere('a.price <= :price'.$i.'y');
        				$qb->setParameter(':price'.$i.'y', $price[$i]+400);
        			}else if($price[$i]>=500){
        				$qb->andWhere("a.price <= :price".$i.'z');
        				$qb->setParameter(':price'.$i.'z', $price[$i]+500);
        			}else if($price[$i]>=2500){
        				$qb->andWhere("a.price >= :price".$i.'x');
        				$qb->setParameter(':price'.$i.'x', $price[$i]+0);
        			}
        		}
        	}
        	if(!empty($medium)){
        		for ($i=0; $i < sizeof($medium); $i++) {
        			if($i>0){
        				$qb->orWhere('a.medium = :medium'.$i);
        				$qb->setParameter(':medium'.$i, $medium[$i]);
        			}else
        			{
        				$qb->andWhere('a.medium = :medium'.$i);
        				$qb->setParameter(':medium'.$i, $medium[$i]);
        			}
        		}
        	}
        	if(!empty($width)){
        		for ($i=0; $i < sizeof($width); $i++) {
        			if($i>0){
        				if($width[$i]>=100){
        					$qb->orWhere("a.width >= :width".$i);
        					$qb->setParameter(':width'.$i, $width[$i]);
        				}else{
        					$qb->orWhere("a.width < :width".$i);
        					$qb->setParameter(':width'.$i, $width[$i]);
        				}
                    }else{
                        if($width[$i]>=100){
                            $qb->andWhere("a.width >= :width".$i);
                            $qb->setParameter(':width'.$i, $width[$i]);
                        }else{
                            $qb->andWhere("a.width < :width".$i);
                            $qb->setParameter(':width'.$i, $width[$i]);
                        }
                    }
        			if($width[$i]>=100&&$width[$i]<500){
        				$qb->andWhere("a.width >= :width".$i.'x');
        				$qb->setParameter(':width'.$i.'x', $width[$i]+400);
        			}else if($width[$i]>=500){
        				$qb->andWhere("a.width >= :width".$i.'y');
        				$qb->setParameter(':width'.$i.'y', $width[$i]+500);
        			}else if($width[$i]>=2500){
        				$qb->andWhere("a.width >= :width".$i.'z');
        				$qb->setParameter(':width'.$i.'z', $width[$i]);
        			}
        		}
        	}
        }
	    return $query = $qb->getQuery()->getResult();
	}
	public function findSomeMedium($offset){
		$qb = $this->createQueryBuilder('r')
			->select('r.medium')
            ->setFirstResult( $offset )
           	->setMaxResults( 5 )
        ;
        $query = $qb->getQuery()->getResult();
        $result=array();
        foreach ($query as $key => $value) {
        	if($value['medium']!= null){
        		array_push($result,$value['medium']);
        	}
        }
        return $result;
	}
}
